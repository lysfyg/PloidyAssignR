% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_calWatsonFractions.R
\name{calWatsonFractions}
\alias{calWatsonFractions}
\title{Calculate Watson Fractions using a Sliding Window}
\usage{
calWatsonFractions(
  dt_input_count,
  input_chrom = NULL,
  input_window = 1e+07,
  input_step = 5e+06,
  na_rm = TRUE
)
}
\arguments{
\item{dt_input_count}{The strand-seq count data prepared by input_prep(). This data.table should contain strand-specific read counts for each cell and chromosome.}

\item{input_chrom}{(Default: NULL) Specifies the chromosomes to analyze. If not provided, all chromosomes in the dataset will be analyzed.}

\item{input_window}{(Default: 10000000) The size of the sliding window used for calculating the relative Watson-strand state frequency.}

\item{input_step}{(Default: 5000000) The step size for the sliding window.}

\item{na_rm}{(Default: TRUE) Determines whether NA values should be removed from the dataset. NA values may cause errors in calculations.}
}
\value{
Returns a data.table with the columns "chrom", "start", "end", "sample", "cell", "total_count", "fraction_w". This table provides detailed information on the Watson strand fraction for each window, essential for downstream analyses like chromatid segregation pattern recognition.
}
\description{
calWatsonFractions is a core function in PloidyAssignR that calculates the relative Watson-strand state frequency "fraction_w" of single-cell Strand-seq count data using a sliding window approach. This calculation is essential for the assessment of strand-specific chromatid segregation patterns, a fundamental step in the systematic inference of ploidy states.
}
\examples{
# Calculate relative W-strand state frequencies for chromosome 1 in K562 cells
K562_chr1_windows <- calWatsonFractions(data_K562_strand_seq_count, input_chrom = "chr1")

# Visualize distribution patterns using internal plotting function
fct_plot_distribution_patterns(K562_chr1_windows)

# Continue with ploidy assignment using assignConsensusPloidy()
assignConsensusPloidy(K562_chr1_windows)
}
